<?php

/**
 * @file
 * A light-weight, customizable lightbox plugin for jQuery 1.3
 */

/**
 * The default path to the Colorbox directory.
 */
define('COLORBOX_MIN_PLUGIN_VERSION', '1.3.21.1');


/**
 * Implements hook_theme().
 */
function colorbox_theme() {
  return array(
    'colorbox_imagefield' => array(
      'variables' => array(
        'image' => array(),
        'path' => NULL,
        'title' => NULL,
        'gid' => NULL,
      ),
      'file' => 'colorbox.theme.inc',
    ),

    'colorbox_insert_image' => array(
      'variables' => array(
        'item' => NULL,
        'widget' => NULL,
      ),
      'template' => 'colorbox-insert-image',
      'file' => 'colorbox.theme.inc',
    ),

    'colorbox_image_formatter' => array(
      'variables' => array(
        'item' => NULL,
        'entity_type' => NULL,
        'entity' => NULL,
        'node' => NULL,  // Left for legacy support.
        'field' => array(),
        'path' => drupal_get_path('module', 'colorbox') . '/templates',
        'display_settings' => array(),
      ),
      'file' => 'colorbox.theme.inc',
    ),
  );
}

/**
 * Implements hook_views_api().
 */
function colorbox_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'colorbox') . '/views',
  );
}

/**
 * Implements hook_library_info().
 */
function colorbox_library_info() {
  $libraries = array();
  $base = drupal_get_path('module', 'colorbox') . '/js/colorbox';
  $libraries['colorbox.source'] = array(
    'title' => 'Colorbox plugin',
    'website' => 'http://www.jacklmoore.com/colorbox',
    'version' => '1.4.27',
    'js' => array(
      $base . '/jquery.colorbox.js' => array(),
    ),
  );
  $libraries['colorbox.minified'] = array(
    'title' => 'Colorbox plugin ',
    'website' => 'http://www.jacklmoore.com/colorbox',
    'version' => '1.4.27',
    'js' => array(
      $base . '/jquery.colorbox-min.js' => array(),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_menu().
 */
function colorbox_menu() {
  $items = array();

  $items['colorbox_settings'] = array(
    'title' => 'Colorbox',
    'description' => 'Adjust Colorbox settings.',
    'route_name' => 'colorbox_settings',
  );

  return $items;
}

/**
 * Check if Colorbox should be active for the current URL.
 *
 * @return
 *   TRUE if Colorbox should be active for the current page.
 */
function _colorbox_active() {
  // Make it possible deactivate Colorbox with
  // parameter ?colorbox=no in the url.
  if (isset($_GET['colorbox']) && $_GET['colorbox'] == 'no') {
    return FALSE;
  }

  $config = config('colorbox.settings');

  $current_path = current_path();
  // Code from the block_list funtion in block.module.
  $path = Drupal::service('path.alias_manager.cached')->getPathAlias($current_path);
  $colorbox_pages = $config->get('colorbox_pages');
  // Compare with the internal and path alias (if any).
  $page_match = drupal_match_path($path, $colorbox_pages);
  if ($path != $current_path) {
    $page_match = $page_match || drupal_match_path($current_path, $colorbox_pages);
  }
  $page_match = $config->get('advanced.visibility') == 0 ? !$page_match : $page_match;

  return $page_match;
}

/**
 * Implements hook_insert_styles().
 */
function colorbox_insert_styles() {
  $insert_styles = array();
  foreach (image_styles() as $key => $style) {
    $insert_styles['colorbox__' . $key] = array('label' => t('Colorbox @style', array('@style' => $style['name'])));
  }

  return $insert_styles;
}

/**
 * Implements hook_insert_content().
 */
function colorbox_insert_content($item, $style, $widget) {
  list($item['module_name'], $item['style_name']) = explode('__', $style['name'], 2);
  return theme('colorbox_insert_image', array('item' => $item, 'widget' => $widget));
}

/**
 * Machine names normally need to be unique but that does not apply to galleries.
 *
 * @return
 *   Always FALSE
 */
function colorbox_gallery_exists() {
  return FALSE;
}
