<?php

/**
 * @file
 * A light-weight, customizable lightbox plugin for jQuery 1.3
 */

/**
 * The default path to the Colorbox directory.
 */
define('COLORBOX_MIN_PLUGIN_VERSION', '1.3.21.1');


/**
 * Implements hook_theme().
 */
function colorbox_theme() {
  return array(
    'colorbox_formatter' => array(
      'variables' => array(
        'item' => NULL,
        'entity' => NULL,
        'settings' => NULL,
      ),
      'file' => 'colorbox.theme.inc',
    ),
  );
}

/**
 * Implements hook_libraries_info().
 */
function colorbox_libraries_info() {
  $libraries['colorbox'] = array(
    'name' => 'Colorbox plugin',
    'vendor url' => 'http://www.jacklmoore.com/colorbox',
    'download url' => 'https://github.com/jackmoore/colorbox/archive/1.x.zip',
    'version arguments' => array(
      'file' => 'jquery.colorbox-min.js',
      'pattern' => '@(?i:Colorbox) v([0-9\.a-z]+)@',
      'lines' => 5,
    ),
    'files' => array(
      'js' => array(
        'jquery.colorbox-min.js',
      ),
    ),
    'variants' => array(
      'minified' => array(
        'files' => array(
          'js' => array(
            'jquery.colorbox-min.js',
          ),
        ),
      ),
      'source' => array(
        'files' => array(
          'js' => array(
            'jquery.colorbox.js',
          ),
        ),
      ),
    ),
  );

  return $libraries;
}

/**
 * Check if Colorbox should be active for the current URL.
 *
 * @return
 *   TRUE if Colorbox should be active for the current page.
 */
function _colorbox_active() {
  // Make it possible deactivate Colorbox with
  // parameter ?colorbox=no in the url.
  if (isset($_GET['colorbox']) && $_GET['colorbox'] == 'no') {
    return FALSE;
  }

  // Assume there are no matches until one is found.
  $page_match = FALSE;

  // Convert path to lowercase. This allows comparison of the same path
  // with different case. Ex: /Page, /page, /PAGE.
  $config = \Drupal::config('colorbox.settings');
  $pages = drupal_strtolower(_colorbox_array_to_string($config->get('advanced.pages')));

  // Compare the lowercase path alias (if any) and internal path.
  $path = current_path();
  $path_alias = drupal_strtolower(\Drupal::service('path.alias_manager.cached')->getPathAlias($path));
  $page_match = drupal_match_path($path_alias, $pages);
  if ($path_alias != $path) {
    $page_match = $page_match || drupal_match_path($path, $pages);
  }
  $page_match = $config->get('advanced.visibility') == 0 ? !$page_match : $page_match;

  return $page_match;
}

/**
 * Converts a text with lines (\n) into an array of lines.
 *
 * @return
 *   Array with as many items as non-empty lines in the text
 */
function _colorbox_string_to_array($text) {
  $text = str_replace("\r\n", "\n", $text);
  return array_filter(explode("\n", $text), 'trim');
}

/**
 * Converts an array of lines into an text with lines (\n).
 *
 * @return
 *   Text with lines
 */
function _colorbox_array_to_string($array) {
  return implode("\r\n", $array);
}
